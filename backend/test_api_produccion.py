#!/usr/bin/env python3
"""
Script de prueba simplificado para verificar conectividad con la API de producci√≥n
"""

import requests
import json

# URL de la API de producci√≥n
API_URL = "https://apipwa.sembrandodatos.com"

def test_api_connection():
    """Probar conexi√≥n b√°sica con la API"""
    
    print("üîç Probando conexi√≥n con API de producci√≥n...")
    print(f"üì° URL: {API_URL}")
    
    try:
        # Probar endpoint b√°sico
        print("\n1Ô∏è‚É£ Probando endpoint de salud...")
        response = requests.get(f"{API_URL}/health", timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ API responde correctamente")
            print(f"   Respuesta: {response.json()}")
        else:
            print(f"‚ö†Ô∏è API responde con c√≥digo: {response.status_code}")
            
    except requests.exceptions.ConnectTimeout:
        print("‚ùå Timeout de conexi√≥n - El servidor puede estar ocupado")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå Error de conexi√≥n - Verificar URL o servidor")
        
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")

    # Probar endpoint de notificaciones
    try:
        print("\n2Ô∏è‚É£ Probando endpoint de notificaciones...")
        response = requests.get(f"{API_URL}/notificaciones", params={"limit": 1}, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Notificaciones endpoint funciona")
            print(f"   Total notificaciones: {data.get('total', 0)}")
            
            if data.get('notificaciones') and len(data['notificaciones']) > 0:
                notif_id = data['notificaciones'][0]['id']
                print(f"   Primera notificaci√≥n ID: {notif_id}")
                
                # Probar endpoint de estad√≠sticas
                print(f"\n3Ô∏è‚É£ Probando estad√≠sticas para notificaci√≥n {notif_id}...")
                stats_response = requests.get(f"{API_URL}/notificaciones/{notif_id}/estadisticas", timeout=10)
                
                if stats_response.status_code == 200:
                    stats_data = stats_response.json()
                    print("‚úÖ Endpoint de estad√≠sticas funciona perfectamente!")
                    print(f"   Total usuarios: {stats_data.get('resumen', {}).get('total_usuarios_objetivo', 'N/A')}")
                    print(f"   Usuarios le√≠do: {stats_data.get('resumen', {}).get('usuarios_leido', 'N/A')}")
                else:
                    print(f"‚ùå Error en estad√≠sticas: {stats_response.status_code}")
                    print(f"   Respuesta: {stats_response.text}")
            else:
                print("‚ö†Ô∏è No hay notificaciones para probar estad√≠sticas")
                
        else:
            print(f"‚ùå Error en notificaciones: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Error probando notificaciones: {e}")

if __name__ == "__main__":
    test_api_connection()
