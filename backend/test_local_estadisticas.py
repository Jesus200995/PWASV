#!/usr/bin/env python3
"""
Script de prueba para el endpoint local de estad√≠sticas
"""

import requests
import json

# URL del backend local
API_URL = "http://localhost:8000"

def test_local_estadisticas():
    """Probar endpoint de estad√≠sticas localmente"""
    
    print("üîç Probando endpoint local de estad√≠sticas...")
    print(f"üì° URL: {API_URL}")
    
    try:
        # Obtener notificaciones
        print("\n1Ô∏è‚É£ Obteniendo notificaciones locales...")
        response = requests.get(f"{API_URL}/notificaciones", params={"limit": 5})
        
        if response.status_code != 200:
            print(f"‚ùå Error obteniendo notificaciones: {response.status_code}")
            return
        
        data = response.json()
        notificaciones = data.get('notificaciones', [])
        
        if not notificaciones:
            print("‚ö†Ô∏è No hay notificaciones locales")
            # Crear una notificaci√≥n de prueba
            print("üìù Creando notificaci√≥n de prueba...")
            create_data = {
                'titulo': 'Notificaci√≥n de Prueba',
                'subtitulo': 'Prueba para estad√≠sticas',
                'descripcion': 'Esta es una notificaci√≥n para probar las estad√≠sticas',
                'enviada_a_todos': True
            }
            
            create_response = requests.post(f"{API_URL}/notificaciones", data=create_data)
            if create_response.status_code == 200:
                print("‚úÖ Notificaci√≥n de prueba creada")
                # Volver a obtener notificaciones
                response = requests.get(f"{API_URL}/notificaciones", params={"limit": 5})
                data = response.json()
                notificaciones = data.get('notificaciones', [])
            else:
                print(f"‚ùå Error creando notificaci√≥n: {create_response.status_code}")
                return
        
        # Probar estad√≠sticas con la primera notificaci√≥n
        notificacion_id = notificaciones[0]['id']
        titulo = notificaciones[0]['titulo']
        
        print(f"üéØ Probando estad√≠sticas con notificaci√≥n ID: {notificacion_id}")
        print(f"   T√≠tulo: {titulo}")
        
        # Probar endpoint de estad√≠sticas
        print(f"\n2Ô∏è‚É£ Obteniendo estad√≠sticas...")
        
        response = requests.get(f"{API_URL}/notificaciones/{notificacion_id}/estadisticas")
        
        if response.status_code == 200:
            stats = response.json()
            print("‚úÖ ¬°Estad√≠sticas obtenidas exitosamente!")
            print(f"   üìä Total usuarios objetivo: {stats['resumen']['total_usuarios_objetivo']}")
            print(f"   ‚úÖ Usuarios que leyeron: {stats['resumen']['usuarios_leido']}")
            print(f"   ‚è≥ Usuarios que no leyeron: {stats['resumen']['usuarios_no_leido']}")
            print(f"   üìà Porcentaje le√≠do: {stats['resumen']['porcentaje_leido']}%")
            print("\nüéâ ¬°El endpoint de estad√≠sticas funciona perfectamente!")
            return True
        else:
            print(f"‚ùå Error en estad√≠sticas: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

if __name__ == "__main__":
    test_local_estadisticas()
